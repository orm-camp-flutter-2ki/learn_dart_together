@startuml

interface Borrowable {
  + borrow(): bool
  + renew(): bool
  + returnBook(): bool
  + isAvailable(): bool
}

class Book implements Borrowable{
  - title: String
  - author: String
  - publishDate: DateTime?
  - borrowed: bool
  - borrowDate: DateTime?
  - returnDate: DateTime?
  - renewalCount: int
  + Book(title: String, author: String, publishDate: DateTime?)
  + borrow(): bool
  + renew(): bool
  + returnBook(): bool
  + isAvailable(): bool
  + toJson(): Map<String, dynamic>
}

class Member {
  - name: String
  - registrationDate: DateTime?
  - address: String
  - phoneNumber: String
  - birthDate: DateTime?
  + Member(name: String, address: String, phoneNumber: String, birthDate: DateTime?)
  + getAge(): int
  + toMap(): Map<String, dynamic>
}

class BackupManager {
  + backup(library: Library): void
}

class ImportBackUp {
  + importBackup(library: Library): void
}

class Library {
  - books: List<Book>
  - members: List<Member>
  - backupFileName: String
  - mementos: List<LibraryMemento>
  + addBook(book: Book): void
  + addMember(member: Member): void
  + borrowBook(book: Book, member: Member): void
  + renewBook(book: Book): void
  + returnBook(book: Book): void
  + displayAvailableBooks(): void
  + displayRecentBooks(): void
  + displayMembersInfo(): void
}

class LibraryMemento {
  - books: List<Book>
  - members: List<Member>
  + LibraryMemento(books: List<Book>, members: List<Member>)
  + restore(library: Library): void
}

class MemberManager {
  - mementos: List<LibraryMemento>
  + deleteMember(library: Library, member: Member): void
  + undoDelete(library: Library): void
}

Library "1" -- "0..*" Book : contains
Library "1" -- "0..*" Member : contains
Library "1" -- "0..*" LibraryMemento : has
BackupManager "1" -- "1" Library : uses
ImportBackUp "1" -- "1" Library : uses
MemberManager "1" -- "1" Library : uses

@enduml